[{"C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\App.js":"1","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\index.js":"2","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Tmbd.js":"3","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\MovieRow\\index.js":"4","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\FeaturedMovie\\index.js":"5","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\Header\\index.js":"6"},{"size":2140,"mtime":1610485827805,"results":"7","hashOfConfig":"8"},{"size":199,"mtime":1610367756918,"results":"9","hashOfConfig":"8"},{"size":2661,"mtime":1610397062240,"results":"10","hashOfConfig":"8"},{"size":1693,"mtime":1610485417304,"results":"11","hashOfConfig":"8"},{"size":1765,"mtime":1610486776752,"results":"12","hashOfConfig":"8"},{"size":755,"mtime":1610471723427,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"19fiwee",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\App.js",["33"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Tmdb from \"./Tmbd\";\nimport MovieRow from \"./Components/MovieRow\";\nimport FeaturedMovie from \"./Components/FeaturedMovie\";\nimport Header from \"./Components/Header\";\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista TOTAL\n      let list = await Tmdb.getHomelist();\n      setMovieList(list);\n\n      //Pegando o Featured - filme em destaque\n      let originals = list.filter((i) => i.slug === \"originals\");\n      //Gera numero aleatório\n      let randomChosen = Math.floor(\n        Math.random() * (originals[0].items.results.length - 1)\n      );\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <div>\n            <MovieRow key={key} title={item.title} items={item.items} />\n          </div>\n        ))}\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"\">❤️</span> \n        Direitos de imagem para Netflix\n        Dados pegos no site Themoviedb.org\n      </footer>\n\n\n          {movieList.length <= 0 &&\n      <div className=\"loading\">\n            <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading.gif\" alt=\"Carregando\"/>\n          </div>\n          }\n    </div>\n  );\n};\n","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\index.js",[],["34","35"],"C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Tmbd.js",["36"],"const API_KEY = '38c007f28d5b66f36b9c3cf8d8452a4b';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch (`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getHomelist: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentay',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key${API_KEY}`)\r\n                    break;\r\n                    case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;  \r\n                    default:\r\n                        info = null;\r\n                        break;                      \r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}",["37","38"],"C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\MovieRow\\index.js",["39"],"import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nexport default ({ title, items }) => {\r\n  const [scrollX, setScrollX] = useState(-400);\r\n\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n    if (x > 0) {\r\n      x = 0;\r\n    }\r\n    setScrollX(x);\r\n  };\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 150;\r\n    if((window.innerWidth - listW) > x ) {\r\n      x = (window.innerWidth - listW) - 60;\r\n    }\r\n    setScrollX(x);\r\n  }\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\r\n      </div>\r\n\r\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n        <NavigateNextIcon style={{ fontSize: 50 }} />\r\n      </div>\r\n\r\n      <div className=\"movieRow--listarea\">\r\n        <div\r\n          className=\"movieRow--list\"\r\n          style={{\r\n            marginLeft: scrollX,\r\n            width: items.results.length * 150,\r\n          }}\r\n        >\r\n          {items.results.length > 0 &&\r\n            items.results.map((item, key) => (\r\n              <div key={key} className=\"movieRow--item\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                  alt={item.original_title}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\FeaturedMovie\\index.js",["40"],"import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default ({ item }) => {\r\n  let firstDate = new Date(item.first_air_date);\r\n  let genres = [];\r\n  for (let i in item.genres) {\r\n    genres.push(item.genres[i].name);\r\n  }\r\n\r\n  let description = item.overview;\r\n  if(description.length > 200) {\r\n    description = description.substring(0, 200) + '...';\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className=\"featured\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{item.original_name}</div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n            <div className=\"featured--seasons\">\r\n              {item.number_of_seasons} temporada\r\n              {item.number_of_seasons !== 1 ? \"s\" : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"featured--description\">{description}</div>\r\n          <div className=\"featured--buttons\">\r\n            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">\r\n              ➤ Assistir\r\n            </a>\r\n            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">\r\n              + Minha Lista\r\n            </a>\r\n            <div className=\"featured--genres\">\r\n              <strong>Gêneros:</strong>\r\n              {genres.join(\", \")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Gabi\\Desktop\\clone-netflix\\netflixclone\\src\\Components\\Header\\index.js",["41","42","43"],"import React from 'react';\r\nimport './style.css'\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black': ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"\">\r\n                    <img src=\"https://lh3.googleusercontent.com/proxy/v2c2xgOggOnIIHKJo8zgeYPbr6SuwAB1HjO12S0Us5IK6Bqw-DgN4T60rU1A44L-y-hgN6slfZljU77lvuT-AOUlGg_iQHt6k-aUHWpETLjaBQ5QRDusw5EGkEI\" alt=\"Logo Netix\"/>\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"header--user\">\r\n                <a href=\"\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Logo Netix\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n",{"ruleId":"44","severity":1,"message":"45","line":8,"column":1,"nodeType":"46","endLine":78,"endColumn":3},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"44","severity":1,"message":"51","line":13,"column":1,"nodeType":"46","endLine":76,"endColumn":2},{"ruleId":"47","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":1,"nodeType":"46","endLine":61,"endColumn":3},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":53,"endColumn":3},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":20,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":8,"column":17,"nodeType":"56","endLine":8,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":14,"column":17,"nodeType":"56","endLine":14,"endColumn":28},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"Assign object to a variable before exporting as module default",["57"],["58"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]